<?xml version="1.0" encoding="windows-1251"?>
<!--
/*
 * org.riverock.sso - Single Sign On implementation
 * 
 * Copyright (C) 2004, Riverock Software, All Rights Reserved.
 * 
 * Riverock - The Open-source Java Development Community
 * http://www.riverock.org
 * 
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 *
 */
-->
<!--$Id$-->
<project name="riverock SSO" default="jar" basedir=".">

    <property name="Name" value="riverock-sso"/>
    <property name="release-version" value="4.0.4"/>
    <property name="java.target" value="1.4"/>
    <property name="java.class.target" value="1.4"/>

    <!-- Global initialization -->
    <target name="setversion"/>
    <target name="set_release_version"/>

    <property name="build-release-name" value="riverock-sso-${release-version}"/>
    <property name="manifest-title-name" value="riverock SSO"/>
    <property name="manifest-vendor-name" value="riverock. http://www.riverock.com"/>

    <property name="mill.lib" value="${Name}-${release-version}.jar"/>
    <property name="mill-schema.lib" value="${Name}-schema-${release-version}.jar"/>
    <property name="mill.lib.encoded" value="${Name}-${release-version}.encoded.jar"/>

    <property name="lib.dir" value="../riverock-lib/lib"/>


    <property file="../riverock.properties"/>

    <property name="site.name" value="_localhost"/>
    <property name="exclude" value="**/*.txt, **/*.bat, **/*.xml, **/*.sh, **/*.jav, **/*.mf, **/*.class,**/tmp_*.java"/>

    <property name="encode.dir" value="retroguard-v1.1"/>
    <property name="encoded-jar" value="${encode.dir}/${mill.lib.encoded}"/>
    <property name="encoded-log" value="${encode.dir}/encode.log"/>

    <property name="doc.dir" value="doc"/>
    <property name="src.dir" value="src"/>
    <property name="tomcat.dir" value="tomcat"/>

    <property name="src.tomcat-xml.dir" value="${src.dir}/tomcat-xml"/>

    <property name="src.java.dir" value="${src.dir}/java"/>
    <property name="src-core.java.dir" value="${src.dir}-core/java"/>
    <property name="src-schema.java.dir" value="${src.dir}-schema/java"/>

    <property name="src.java-test.dir" value="${src.dir}/test"/>

    <property name="src.jsp.dir" value="${src.dir}/jsp"/>
    <property name="src.xsd.dir" value="${src.dir}/xsd"/>
    <property name="src.xml.dir" value="${src.dir}/xml"/>

    <property name="src.site.dir" value="${src.jsp.dir}/${site.name}"/>
    <property name="webinf.jsp.dir" value="${src.site.dir}/WEB-INF"/>

    <property name="manifest-file-name" value="manifest.mf"/>
    <property name="manifest" value="src/java/${manifest-file-name}"/>

    <path id="classpath-1.4">
        <pathelement location="${lib.dir}/ojdbc14.jar"/>
    </path>
    <path id="classpath-1.3">
        <pathelement location="${lib.dir}/classes12.zip"/>
        <pathelement location="${lib.dir}/xml-commons-1.1.1.jar"/>
        <pathelement location="${lib.dir}/jce1_2_1.jar"/>
    </path>
    <path id="classpath-base">
        <pathelement location="${lib.dir}/${riverock-common.lib}"/>
        <pathelement location="${lib.dir}/${riverock-cache.lib}"/>
        <pathelement location="${lib.dir}/${riverock-sql-parser.lib}"/>
        <pathelement location="${lib.dir}/${riverock-generic.lib}"/>
        <pathelement location="${lib.dir}/${servlet.lib}"/>
        <pathelement location="${lib.dir}/${secure.lib}"/>
        <pathelement location="${lib.dir}/mail.jar"/>
        <pathelement location="${lib.dir}/${log4j.lib}"/>
        <pathelement location="${lib.dir}/${common-logging.lib}"/>
        <pathelement location="${lib.dir}/${junit.lib}"/>
        <pathelement location="${lib.dir}/${castor.lib}"/>
        <pathelement location="${lib.dir}/${xerces.lib}"/>
        <pathelement location="${lib.dir}/${xml-api.lib}"/>
        <pathelement location="${lib.dir}/${portlet.lib}"/>

        <path refid="classpath-${java.target}"/>
    </path>

    <property name="build.dir" value="build"/>

    <property name="build.dest" value="${build.dir}/classes"/>
    <property name="build.java" value="${build.dir}/java"/>
    <property name="build.tests" value="${build.dir}/tests"/>
    <property name="build.src.java" value="${src.java.dir}"/>
    <property name="build.src.jsp" value="${src.jsp.dir}"/>

    <property name="dist.dir" value="${build.dir}/dist"/>
    <property name="docs.dir" value="${build.dir}/javadocs"/>

    <property name="debug" value="on"/>
    <property name="optimize" value="off"/>
    <property name="deprecation" value="on"/>

    <target name="full_build_module">
        <antcall target="full_clean"/>
        <ant antfile="build-core.xml" target="gen_core"  inheritall="false" />
        <ant antfile="build-schema.xml" target="gen_all_schema" inheritall="false" />
        <antcall target="jar"/>
    </target>

    <target name="start.apache">
        <property name="null.prop" value=""/>
        <exec executable="net" outputproperty="null.prop">
            <arg line=" start 'Apache Tomcat'"/>
        </exec>
    </target>

    <target name="stop.apache">
        <property name="null.prop" value=""/>
        <exec executable="net" outputproperty="null.prop">
            <arg line=" stop 'Apache Tomcat'"/>
        </exec>
    </target>

    <target name="run_tomcat_with_new jar" depends="init">
        <antcall target="stop.apache"/>
        <antcall target="jar"/>

        <property name="webmill.context" value="C:\opt2\_www\_me.askmore.info\mill"/>
        <copy file="${build.dir}/${mill.lib}" todir="${webmill.context}/WEB-INF/lib"/>
        <antcall target="start.apache"/>
    </target>


    <target name="jar" depends="jar_without_copy">

        <echo message="start encode jar" level="debug" />
        <delete file="${encode.dir}\${mill.lib.encoded}"/>

        <copy file="${build.dir}\${mill.lib}" todir="../riverock-lib/lib"/>
    </target>

    <target name="full_clean">
        <ant antfile="build-core.xml" target="clean"  inheritall="false" />
        <ant antfile="build-schema.xml" target="clean" inheritall="false" />
        <antcall target="clean"/>
    </target>

    <target name="clean">
        <delete failonerror="false">
            <fileset dir="${build.dir}">
                <include name="**"/>
                <include name="*.jar"/>
                <include name="*.tar"/>
                <include name="*.gz"/>
            </fileset>
        </delete>
        <delete dir="${docs.dir}" failonerror="false"/>
        <delete dir="${build.dir}/src/" failonerror="false"/>
        <delete dir="${build.dir}/classes/" failonerror="false"/>
        <delete dir="${build.dir}/bin/" failonerror="false"/>
        <delete dir="${build.dir}/tomcat/" failonerror="false"/>
        <delete dir="${build.dir}/ext/" failonerror="false"/>
        <delete dir="${build.dir}" failonerror="false"/>

        <delete file="${encoded-jar}" failonerror="false"/>
        <delete file="${encoded-log}" failonerror="false"/>
    </target>

    <!-- =================================================================== -->
    <!-- Runs unit tests                                                     -->
    <!-- =================================================================== -->
    <target name="ut" depends="compile,init">
      <echo message="Running unit tests "/>

      <javac srcdir="${src.java-test.dir}"
             destdir="${build.tests}"
             debug="${debug}"
             deprecation="${deprecation}"
             optimize="${optimize}"
         classpath="${lib.dir}">
          <classpath>
              <path location="${build.dir}/classes"/>
              <path refid="classpath-base"/>
          </classpath>
       </javac>

       <junit printsummary="yes" haltonfailure="no" haltonerror="no" showoutput="no"
           dir="${webinf.jsp.dir}" fork="true" >

          <classpath>
              <path location="${build.tests}"/>
              <path location="${build.dir}/classes"/>
              <path refid="classpath-base"/>
          </classpath>

          <formatter type="plain" usefile="false"/>

          <batchtest fork="yes" haltonfailure="yes" haltonerror="yes">
            <fileset dir="${build.tests}">
                <include name="**/Test*.class"/>
                <exclude name="**/*$*.class"/>
            </fileset>
          </batchtest>
       </junit>
    </target>

    <target name="make_manifest_file" depends="init">
        <echo message="Start make manifest file"/>
    <echo file="${build.dest}/${manifest-file-name}">Manifest-Version: 1.0
Specification-Title: ${manifest-title-name}
Specification-Vendor: ${manifest-vendor-name}
Specification-Version: ${release-version}
Implementation-Title: ${manifest-title-name}
Implementation-Vendor: ${manifest-vendor-name}
Implementation-Version: ${release-version}

Name: ${manifest-title-name}
Sealed: true
</echo>
        <echo message="Manifest file is created"/>
    </target>

    <target name="compile-without-tests" depends="set_build_number, prepare, init">

        <delete includeEmptyDirs="true" failonerror="false">
            <fileset dir="${build.java}">
                <include name="**"/>
            </fileset>
        </delete>
        <mkdir dir="${build.java}" />

        <!-- Compile PersistenceException -->
        <javac
            target="${java.class.target}"
            srcdir="${src.java.dir}/org/riverock/sso/exception"
            destdir="${build.dest}"
            excludes="${exclude}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}"
            failonerror="true"
            memoryInitialSize="128m"
            memoryMaximumSize="256m"
            >
            <classpath refid="classpath-base"/>
        </javac>

        <javac
            target="${java.class.target}"
            srcdir="${src-schema.java.dir}"
            destdir="${build.dest}"
            excludes="${exclude}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}"
            failonerror="true"
            memoryInitialSize="128m"
            memoryMaximumSize="256m"
            >
            <classpath>
                <path refid="classpath-base"/>
                <path location="${build.dest}"/>
            </classpath>
        </javac>
        <javac
            target="${java.class.target}"
            srcdir="${src-core.java.dir}"
            destdir="${build.dest}"
            excludes="${exclude}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}"
            failonerror="true"
            memoryInitialSize="128m"
            memoryMaximumSize="256m"
            >
            <classpath>
                <path refid="classpath-base"/>
                <path location="${build.dest}"/>
            </classpath>
        </javac>
        <javac
            target="${java.class.target}"
            srcdir="${src.java.dir}"
            destdir="${build.dest}"
            excludes="${exclude}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}"
            failonerror="true"
            memoryInitialSize="128m"
            memoryMaximumSize="256m"
            >
            <classpath>
                <path refid="classpath-base"/>
                <path location="${build.dest}"/>
            </classpath>
        </javac>
    </target>

    <target name="compile" depends="set_build_number, prepare, init">

        <delete includeEmptyDirs="true" failonerror="false">
            <fileset dir="${build.java}">
                <include name="**"/>
            </fileset>
        </delete>
        <mkdir dir="${build.java}" />
        <copy todir="${build.java}">
            <fileset dir="${src.java.dir}">
                <exclude name="**/CVS"/>
                <exclude name="**/*.jav"/>
                <exclude name="**/*.class"/>
                <exclude name="org/riverock/schema/**"/>
                <exclude name="org/riverock/locale/**"/>
                <include name="**"/>
            </fileset>
            <fileset dir="${src.java-test.dir}">
                <exclude name="**/CVS"/>
                <exclude name="**/*.jav"/>
                <exclude name="**/*.class"/>
                <exclude name="org/riverock/schema/**"/>
                <exclude name="org/riverock/locale/**"/>
                <include name="**"/>
            </fileset>
        </copy>

        <replace file="${build.java}/org/riverock/portlet/ContextNavigator.java">
            <replacefilter token="@@WEBMILL_RELEASE@@" value="${release-version}"/>
            <replacefilter token="@@WEBMILL_BUILD@@" value="${build.number}"/>
        </replace>

        <javac
            target="${java.class.target}"
            srcdir="${build.java}"
            destdir="${build.dest}"
            excludes="${exclude}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}"
            failonerror="true"
            memoryInitialSize="128m"
            memoryMaximumSize="256m"
            >
            <classpath refid="classpath-base"/>
        </javac>
    </target>

    <target name="jar_without_copy" depends="compile-without-tests">
        <antcall target="make_manifest_file"/>
        <jar jarfile="${build.dir}/${mill.lib}"
            basedir="${build.dest}"
            includes="org/riverock/**"
            excludes="*.txt,*.bat,*.xml,*.sh,*.jav,${manifest-file-name},org/riverock/schema/**"
            manifest="${build.dest}/${manifest-file-name}"/>
    </target>


    <!-- Initialization target                                               -->
    <target name="init"/>

    <!-- Note this file can only make Ant display values set in the file correctly, -->
    <!-- but external values in the environment or properties file will be operational.  -->
    <!-- Help on usage                                                       -->
    <target name="usage" depends="init">
        <echo message=""/>
        <echo message=""/>
        <echo message="${Name} Build file"/>
        <echo message="-------------------------------------------------------------"/>
        <echo message=""/>
        <echo message=" available targets are:"/>
        <echo message=""/>
        <echo message="   compile      --> compiles the source code to the tree under ${build.dir}"/>
        <echo message="   package      --> generates the ${Name}.jar file"/>
        <echo message="   prepare-docs --> writes the documentation to ${docs.dir}"/>
        <echo message="   clean        --> cleans up the ${build.dir} directory"/>
        <echo message="   distclean    --> cleans up the distribution directory, ${dist.dir}"/>
        <echo message="   usage        --> show this message (default)"/>
        <echo message=""/>
        <echo message=" See the comments inside the build.xml file for more details."/>
        <echo message="-------------------------------------------------------------"/>
        <echo message=""/>
        <echo message=""/>
    </target>
    <!-- Prepares the build directory                                        -->
    <target name="prepare">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dest}"/>
        <mkdir dir="${build.tests}"/>
    </target>
    <!-- Checks for necessary libraries and correct versions of libraries    -->
    <!--
    <target name="check.servlet" depends="prepare" unless="has.servlet">
        <fail message="servlet library does not appear to be in the classpath."/>
    </target>
    -->
    <!-- Compiles the source directory                                       -->
    <!-- <target name="compile" depends="prepare"> -->
    <target name="docs" depends="prepare">
        <echo message="Build javadoc"/>
        <!-- create directories -->
        <mkdir dir="${docs.dir}"/>
        <javadoc
            sourcepath="${build.src.java}"
            destdir="${docs.dir}"
            verbose="true"
            defaultexcludes="true"
            packagenames="mill/db/*,mill/tools/*, mill/startup/*"
            excludepackagenames="mill/price/*"
            >
            <classpath refid="classpath-base"/>
        </javadoc>
    </target>

    <target name="set_build_number">
        <buildnumber/>
    </target>

</project>
