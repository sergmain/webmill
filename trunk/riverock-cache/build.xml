<?xml version="1.0"?>
<!--
/*
 * org.riverock.cache - Generic cache implementation
 * 
 * Copyright (C) 2004, Riverock Software, All Rights Reserved.
 * 
 * Riverock - The Open-source Java Development Community
 * http://www.riverock.org
 * 
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 *
 */
-->
<!--$Id$-->
<project name="riverock.cache" default="usage-main" basedir=".">
    <!-- Global initialization                                               -->
    <property name="Name" value="riverock-cache"/>
    <property name="release-version" value="1.1.0"/>
    <property name="manifest-title-name" value="riverock cache library"/>
    <property name="manifest-vendor-name" value="Riverock. http://www.riverock.org"/>

    <import file="../riverock-include.xml"/>

    <property name="site.name" value="_localhost"/>

    <path id="classpath-base">
        <pathelement location="${lib.dir}/${riverock-common.lib}"/>
        <pathelement location="${lib.dir}/${log4j.lib}"/>
        <pathelement location="${lib.dir}/${common-logging.lib}"/>
        <pathelement location="${lib.dir}/${junit.lib}"/>
        <pathelement location="${lib.dir}/${castor.lib}"/>
        <pathelement location="${lib.dir}/${xerces.lib}"/>
        <pathelement location="${lib.dir}/${xml-api.lib}"/>
    </path>

    <target name="run_tomcat_with_new jar">
        <antcall target="stop.apache"/>
        <antcall target="jar"/>
        <copy file="${build.dir}\${main.lib}" todir="C:\opt2\_www\mill\WEB-INF\lib"/>
        <antcall target="start.apache"/>
    </target>

    <target name="full_build_module">
        <antcall target="full_clean"/>
        <ant antfile="build-schema.xml" target="gen_all_schema" inheritall="false" />
        <antcall target="jar"/>
    </target>

    <target name="full_clean">
        <ant antfile="build-schema.xml" target="clean" inheritall="false" />
        <antcall target="clean"/>
    </target>

    <target name="compile" depends="prepare, set_build_number">
        <javac
            target="${java.class.target}"
            source="${java.class.source}"
            srcdir="${src-schema.java.dir}"
            destdir="${build.dest}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}"
            failonerror="true"
            >
            <classpath refid="classpath-base"/>
        </javac>
        <javac
            target="${java.class.target}"
            source="${java.class.source}"
            srcdir="${src.java.dir}"
            destdir="${build.dest}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}"
            failonerror="true"
            >
            <classpath refid="classpath-base"/>
            <classpath>
                <path refid="classpath-base"/>
                <path location="${build.dest}"/>
            </classpath>
        </javac>
    </target>
</project>
