<?xml version="1.0"?>
<!--
/*
 * org.riverock.webmill - Portal framework implementation
 * 
 * Copyright (C) 2004, Riverock Software, All Rights Reserved.
 * 
 * Riverock - The Open-source Java Development Community
 * http://www.riverock.org
 * 
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 *
 */
-->
<!--$Id$-->
<project name="Webmill portal build script" default="jar_without_copy" basedir=".">

    <property name="Name" value="riverock-webmill"/>
    <property name="release-version" value="5.0.1"/>
    <property name="build-release-name" value="webmill-${release-version}"/>
    <property name="manifest-title-name" value="WebMill engine"/>
    <property name="manifest-vendor-name" value="WebMill. http://webmill.askmore.info"/>

    <import file="../riverock-include.xml"/>

    <property name="site.name" value="_localhost"/>
    <property name="tomcat.dir" value="tomcat"/>
    <property name="src.site.dir" value="${src.jsp.dir}/${site.name}"/>
    <property name="webinf.jsp.dir" value="${src.site.dir}/WEB-INF"/>

    <path id="classpath-base">
        <pathelement location="${lib.dir}/${junit.lib}"/>
        <pathelement location="${lib.dir}/${riverock-interfaces.lib}"/>
        <pathelement location="${lib.dir}/${riverock-common.lib}"/>
        <pathelement location="${lib.dir}/${riverock-generic.lib}"/>
        <pathelement location="${lib.dir}/${riverock-sso.lib}"/>
        <pathelement location="${lib.dir}/${riverock-cache.lib}"/>
        <pathelement location="${lib.dir}/${riverock-sql-parser.lib}"/>
        <pathelement location="${lib.dir}/${riverock-webmill-container.lib}"/>

        <pathelement location="${lib.dir}/${servlet.lib}"/>
        <pathelement location="${lib.dir}/${secure.lib}"/>
        <pathelement location="${lib.dir}/${bcel.lib}"/>
        <pathelement location="${lib.dir}/mail.jar"/>
        <pathelement location="${lib.dir}/${log4j.lib}"/>

        <pathelement location="${lib.dir}/${commons-logging.lib}"/>
        <pathelement location="${lib.dir}/${commons-httpclient.lib}"/>
        <pathelement location="${lib.dir}/${commons-digester.lib}"/>
<!--        <pathelement location="${lib.dir}/${commons-collections.lib}"/>-->
        <pathelement location="${lib.dir}/${commons-beanutils.lib}"/>

        <pathelement location="${lib.dir}/${castor.lib}"/>
        <pathelement location="${lib.dir}/${hypersonic.lib}"/>
        <pathelement location="${lib.dir}/${xalan.lib}"/>
        <pathelement location="${lib.dir}/${xerces.lib}"/>
        <pathelement location="${lib.dir}/${xml-api.lib}"/>
        <pathelement location="${lib.dir}/${portlet.lib}"/>

        <pathelement location="${lib.dir}/ojdbc14.jar"/>
    </path>

    <property name="www.dir" value="c:\opt2\_www"/>
    <property name="context.war.name" value="webmill-portal.war"/>

    <fileset dir="${lib.dir}/" id="web-inf-lib" >
        <include name="${riverock-sso.lib}"/>
        <include name="${riverock-sql-parser.lib}"/>
        <include name="${riverock-interfaces.lib}"/>
        <include name="${riverock-generic.lib}"/>
        <include name="${riverock-common.lib}"/>
        <include name="${riverock-cache.lib}"/>

        <include name="${log4j.lib}"/>
        <include name="${castor.lib}"/>
        <include name="${portlet.lib}"/>

    </fileset>

<!--
    <target name="run_all_new_jar">
        <antcall target="stop.apache"/>
        <antcall target="jar"/>
        <antcall target="copy_new_jars"/>
        <antcall target="start.apache"/>
    </target>

    <target name="copy_to_mill">
        <copy_jars_to_context webmill-context="C:\opt2\_www\mill"/>
    </target>

    <target name="copy_new_jars">
        <antcall target="copy_to_mill"/>
    </target>

    <target name="run_tomcat_with_new_jar">
        <antcall target="stop.apache"/>
        <antcall target="jar"/>
        <antcall target="copy_new_jars"/>
        <antcall target="start.apache"/>
    </target>

    <target name="run_new_mill_war">
        <antcall target="stop.apache"/>
        <antcall target="war"/>
        <copy file="${build.dir}\${context.war.name}" todir="c:/opt2/_www" overwrite="true" />
        <delete dir="${tomcat-home}/webapps/ROOT" />
        <antcall target="start.apache"/>
    </target>
    -->

    <target name="full_build_module">
        <antcall target="full_clean"/>
        <ant antfile="build-core.xml" target="gen_core"  inheritall="false" />
        <ant antfile="build-schema.xml" target="gen_all_schema" inheritall="false" />
<!--        <antcall target="jar"/> -->
        <antcall target="war"/>
    </target>

    <target name="full_clean">
        <ant antfile="build-core.xml" target="clean"  inheritall="false" />
        <ant antfile="build-schema.xml" target="clean" inheritall="false" />
        <antcall target="clean"/>
    </target>

    <target name="test-full" depends="compile">
        <junit printsummary="yes" haltonfailure="yes" haltonerror="yes" fork="yes" dir="${webinf.jsp.dir}">
            <classpath>
                <path refid="classpath-base"/>
                <pathelement location="${build.dest}"/>
            </classpath>
            <formatter type="plain" usefile="false"/>
            <test name="org.riverock.test.cases.SuiteMain"/>
        </junit>
    </target>

    <target name="test-string">
        <junit printsummary="yes" haltonfailure="yes" haltonerror="yes" fork="yes" dir="${webinf.jsp.dir}" >
            <classpath>
                <path refid="classpath"/>
                <pathelement location="${build.dest}"/>
            </classpath>
            <formatter type="plain" usefile="false"/>
            <test name="org.riverock.test.cases.SuiteString"/>
        </junit>
    </target>

<!--
    <target name="build-release-properties">
        <property name="build-release-dir" value="${build.dir}/${build-release-name}"/>
        <property name="build-release-full-name" value="${build.dir}/${build-release-name}"/>

        <property name="build-tomcat-name" value="tomcat"/>
        <property name="build-tomcat-dir" value="${build-release-dir}/${build-tomcat-name}"/>
        <property name="build-tomcat-bin-dir" value="${build-tomcat-dir}/bin"/>
        <property name="build-tomcat-config-dir" value="${build-tomcat-dir}/conf"/>
        <property name="build-tomcat-common-lib-dir" value="${build-tomcat-dir}/common/lib"/>
        <property name="build-tomcat-common-endorsed-dir" value="${build-tomcat-dir}/common/endorsed"/>

        <property name="build-tomcat-webapps-dir" value="${build-tomcat-dir}/webapps"/>

        <property name="build-host-name" value="_localhost"/>
        <property name="build-www-name" value="www"/>
        <property name="build-www-dir" value="${build-release-dir}"/>
        <property name="build-www-mill-dir" value="${build-www-dir}/mill"/>

        <property name="build-www-localhost-dir" value="${build-tomcat-webapps-dir}/localhost"/>
        <property name="build-www-me.askmore-dir" value="${build-tomcat-webapps-dir}/me.askmore"/>
        <property name="build-www-petstore-dir" value="${build-tomcat-webapps-dir}/petstore"/>

        <property name="build-lib-dir" value="${build-release-dir}/lib"/>


        <property name="build-empty-file-name" value="empty.txt"/>
        <property name="build-empty-file" value="${docs.dir}/${build-empty-file-name}"/>

        <property name="build-log4j-config-file" value="mill.log4j.properties"/>
        <property name="build-logs-name" value="logs"/>
        <property name="build-log4j-name" value="log4j"/>
        <property name="build-logs-dir" value="${build-release-dir}/${build-logs-name}"/>
        <property name="build-logs-logs-dir" value="${build-logs-dir}/logs"/>
        <property name="build-logs-log4j-dir" value="${build-logs-dir}/${build-log4j-name}"/>
        <property name="build-logs4j-localhost-dir" value="${build-logs-log4j-dir}/${build-host-name}"/>

        <property name="build-temp-dir-name" value="temp"/>
        <property name="build-temp-dir" value="${build-release-dir}/${build-temp-dir-name}"/>

        <property name="build-hypersonic-name" value="hypersonic"/>
        <property name="build-hypersonic-dir" value="${build-release-dir}/${build-hypersonic-name}"/>
    </target>

    <target name="build_release" depends="build-release-properties" >
        <antcall target="full_clean"/>
        <ant antfile="build-core.xml" target="gen_core"  inheritall="false" />
        <ant antfile="build-schema.xml" target="gen_all_schema" inheritall="false" />
        <antcall target="clean"/>

        <mkdir dir="${build-release-dir}"/>
        <mkdir dir="${build-www-dir}"/>
        <mkdir dir="${build-www-mill-dir}"/>
        <mkdir dir="${build-www-localhost-dir}"/>
        <mkdir dir="${build-release-dir}/hypersonic"/>
        <mkdir dir="${build-temp-dir}"/>
        <mkdir dir="${build-logs-logs-dir}"/>
        <mkdir dir="${build-logs-log4j-dir}"/>
        <mkdir dir="${build-logs4j-localhost-dir}"/>
        <mkdir dir="${build-tomcat-dir}"/>
        <mkdir dir="${build-lib-dir}"/>

        <copy file="${lib.dir}/${hypersonic.lib}"
            tofile="${build-lib-dir}/${hypersonic.lib}" filtering="on"/>

        <copy file="${build-empty-file}"
            tofile="${build-temp-dir}/${build-empty-file-name}" filtering="on" failonerror="true"/>
        <copy file="${build-empty-file}"
            tofile="${build-logs4j-localhost-dir}/${build-empty-file-name}" filtering="on" failonerror="true"/>
        <copy file="${build-empty-file}"
            tofile="${build-logs-logs-dir}/${build-empty-file-name}" filtering="on" failonerror="true"/>

        <echo file="${build-release-dir}/run.bat">
cd ${build-hypersonic-name}
call runServer.bat
cd ..
cd ${build-tomcat-name}\bin
set CATALINA_HOME=..
set CATALINA_HOME=..
set JAVA_ENDORSED_DIRS=%CATALINA_HOME%/common/endorsed
set CATALINA_OPTS=-Xms32m -Xmx128m
start catalina.bat run
cd ..\..
</echo>

        <unzip src="${tomcat.dir}/tomcat.zip" dest="${build-tomcat-dir}"/>
        <delete dir="${build-tomcat-webapps-dir}" failonerror="false"/>
        <mkdir dir="${build-tomcat-webapps-dir}"/>

        <mkdir dir="${build-www-localhost-dir}"/>
        <mkdir dir="${build-www-me.askmore-dir}"/>
        <mkdir dir="${build-www-petstore-dir}"/>

        <copy file="${lib.dir}/${secure.lib}"
            tofile="${build-tomcat-common-lib-dir}/${secure.lib}" filtering="on"/>
        <copy file="${lib.dir}/${log4j.lib}"
            tofile="${build-tomcat-common-lib-dir}/${log4j.lib}" filtering="on"/>

        <copy file="${src.jsp.dir}/mill-config.xml" tofile="${build-www-dir}/mill-config-origin.xml" filtering="on"/>
        <java fork="true"
            classname="org.riverock.system.ProcessMillConfig"
            failonerror="true">
            <arg value="${build-www-dir}/mill-config-origin.xml"/>
            <arg value="${build-www-dir}/mill-config.xml"/>
            <arg value="${build-release-name}/${build-temp-dir-name}"/>
            <classpath location="${build.dir}/${main.lib}"/>
            <classpath refid="classpath-base"/>
        </java>
        <delete file="${build-www-dir}/mill-config-origin.xml"/>

        <copy file="${src.jsp.dir}/mill.xml" tofile="${build-temp-dir}/mill-origin.xml" filtering="on"/>

        <java fork="true"
            classname="org.riverock.system.ProcessMillContextConfig"
            failonerror="true">
            <arg value="${build-temp-dir}/mill-origin.xml"/>
            <arg value="${build-temp-dir}/mill.xml"/>
            <arg value="${build-release-name}/${build-logs-name}/${build-log4j-name}/${build-host-name}"/>
            <arg value="${build-release-name}/${build-logs-name}/${build-log4j-name}/${build-log4j-config-file}"/>
            <arg value="${build-release-name}/mill-config.xml"/>
            <classpath location="${build.dir}/${main.lib}"/>
            <classpath refid="classpath-base"/>
        </java>
        <copy file="${build-temp-dir}/mill.xml" tofile="${build-www-localhost-dir}/mill.xml"/>
        <copy file="${build-temp-dir}/mill.xml" tofile="${build-www-me.askmore-dir}/mill.xml"/>
        <copy file="${build-temp-dir}/mill.xml" tofile="${build-www-petstore-dir}/mill.xml"/>
        <delete file="${build-temp-dir}/mill-origin.xml"/>

        <delete file="${build-tomcat-config-dir}/server.xml"/>
        <copy file="${src.tomcat-xml.dir}/server.xml" tofile="${build-tomcat-config-dir}/server-origin.xml" filtering="on"/>

        <echo message="input param - ${build-tomcat-config-dir}/server-origin.xml"/>
        <echo message="out param - ${build-tomcat-config-dir}/server.xml"/>
        <echo message="appsBase - ${build-release-name}/${build-www-name}/${build-host-name}"/>

        <java fork="true"
            classname="org.riverock.system.ProcessTomcatServerConfig"
            failonerror="true">
            <arg value="${build-tomcat-config-dir}/server-origin.xml"/>
            <arg value="${build-tomcat-config-dir}/server.xml"/>
            <arg value="webapps"/>
            <classpath location="${build.dir}/${main.lib}"/>
            <classpath refid="classpath-base"/>
        </java>
        <delete file="${build-tomcat-config-dir}/server-origin.xml"/>

        <copy file="${docs.dir}\install.txt"
            tofile="${build-release-dir}\install.txt" filtering="on"/>

        <copy file="${webinf.jsp.dir}\mill\mill.log4j.properties"
            tofile="${build-logs-log4j-dir}\${build-log4j-config-file}" filtering="on"/>

        <copy file="${lib.dir}\${hypersonic.lib}"
            tofile="${build-tomcat-common-lib-dir}\${hypersonic.lib}"/>
        <copy file="${lib.dir}\activation.jar"
            tofile="${build-tomcat-common-lib-dir}\activation.jar"/>
        <copy file="${lib.dir}\mail.jar"
            tofile="${build-tomcat-common-lib-dir}\mail.jar"/>
        <copy file="${lib.dir}\1.4\ojdbc14.jar"
            tofile="${build-tomcat-common-lib-dir}\ojdbc14.jar"/>
        <copy file="${lib.dir}\servlet.jar"
            tofile="${build-tomcat-common-lib-dir}\servlet.jar"/>

        <delete file="${build-tomcat-common-lib-dir}\classes12.jar" failonerror="false" />

        <copy todir="${build-release-dir}\hypersonic">
            <fileset dir="hypersonic"/>
        </copy>

        <copy file="${lib.dir}\xalan.jar"
            tofile="${build-tomcat-common-endorsed-dir}\xalan.jar"/>
        <copy file="${lib.dir}\xercesImpl.jar"
            tofile="${build-tomcat-common-endorsed-dir}\xercesImpl.jar"/>
        <copy file="${lib.dir}\xmlParserAPIs.jar"
            tofile="${build-tomcat-common-endorsed-dir}\xmlParserAPIs.jar"/>

        <copy todir="${build-tomcat-common-lib-dir}" failonerror="true">
            <fileset file="${lib.dir}\license.*"/>
        </copy>

        <copy todir="${build-www-mill-dir}/WEB-INF/lib" failonerror="true">
            <fileset file="${lib.dir}\license.log4j"/>
            <fileset file="${lib.dir}\license.castor_exolab"/>
        </copy>

        <copy todir="${build-www-mill-dir}/WEB-INF/mill">
            <fileset dir="${webinf.jsp.dir}\mill">
                <exclude name="**/*.xsd"/>
                <exclude name="**/mill.xml"/>
                <exclude name="log/**/*.log"/>
                <include name="**/*.xml"/>
                <include name="log/**"/>
            </fileset>
        </copy>

        <copy todir="${build-www-mill-dir}/images">
            <fileset dir="${src.dir}/images"/>
        </copy>
        <copy todir="${build-www-mill-dir}/xsd">
            <fileset dir="${src.dir}/xsd">
                <include name="**/*.xsd"/>
                <exclude name="test/**"/>
            </fileset>
        </copy>
        <copy file="${webinf.jsp.dir}/web.xml"
            tofile="${build-www-mill-dir}/WEB-INF/web.xml"/>

        <copy file="${lib.dir}/${castor.lib}"
            tofile="${build-www-mill-dir}/WEB-INF/lib/${castor.lib}"/>
        <copy file="${lib.dir}/${portlet.lib}"
            tofile="${build-www-mill-dir}/WEB-INF/lib/${portlet.lib}"/>

        <copy file="${lib.dir}/${riverock-sql-parser.lib}"
            tofile="${build-www-mill-dir}/WEB-INF/lib/${riverock-sql-parser.lib}"/>

        <copy file="${build.dir}/${main.lib}"
            tofile="${build-www-mill-dir}/WEB-INF/lib/${main.lib}"/>

        <copy file="${lib.dir}/${log4j.lib}"
            tofile="${build-www-mill-dir}/WEB-INF/lib/${log4j.lib}"/>

        <copy file="${src.site.dir}\front_styles.css"
            tofile="${build-www-localhost-dir}\data\front_styles.css"/>
        <copy file="${src.site.dir}\index.html"
            tofile="${build-www-localhost-dir}\data\index.html"/>

        <copy file="${src.site.dir}\front_styles.css"
            tofile="${build-www-me.askmore-dir}\data\front_styles.css" />
        <copy file="${src.site.dir}\index.html"
            tofile="${build-www-me.askmore-dir}\data\index.html"/>

        <copy file="${src.site.dir}\front_styles.css"
            tofile="${build-www-petstore-dir}\data\front_styles.css" />
        <copy file="${src.site.dir}\index.html"
            tofile="${build-www-petstore-dir}\data\index.html"/>

        <copy todir="${build-release-dir}\docs\public">
            <fileset dir="doc\public"/>
        </copy>
        <copy todir="${build-release-dir}\docs\xml-sample">
            <fileset dir="doc\xml-sample"/>
        </copy>
        <copy todir="${build-release-dir}\docs\_how-to">
            <fileset dir="doc\_how-to"/>
        </copy>

        <tar tarfile="${build-release-full-name}.tar" basedir="${build.dir}" longfile="gnu"  includes="">
            <exclude name="**/*.java"/>
            <exclude name="${main.lib}"/>
            <exclude name="classes/**"/>
            <exclude name="java/**"/>
        </tar>
        <gzip zipfile="${build-release-full-name}.tar.gz" src="${build-release-full-name}.tar"/>
        <delete file="${build-release-full-name}.tar"/>
    </target>

    <target name="make-release-files" depends="build-release-properties">
        <tar tarfile="${build-release-full-name}.tar" basedir="${build.dir}" longfile="gnu" includes="">
            <exclude name="**/*.java"/>
            <exclude name="${main.lib}"/>
            <exclude name="classes/**"/>
            <exclude name="java/**"/>
        </tar>
        <gzip zipfile="${build-release-full-name}.tar.gz" src="${build-release-full-name}.tar"/>
        <delete file="${build-release-full-name}.tar"/>
    </target>

    <target name="del.webapps.dir">
        <delete dir="c:\opt\Tomcat 4.1\work\"/>
    </target>

    <target name="clean.webapps">
        <property name="null.prop" value=""/>
        <exec executable="net" outputproperty="null.prop">
            <arg line=" stop 'Apache Tomcat 4.1'"/>
        </exec>
        <antcall target="del.webapps.dir"/>
        <exec executable="net" outputproperty="null.prop">
            <arg line=" start 'Apache Tomcat 4.1'"/>
        </exec>
    </target>
    -->

    <target name="replace_properties">
        <property name="path-to-ctx" value="org/riverock/webmill"/>
        <copy file="${src.java.dir}/${path-to-ctx}/portal/PortalInstanceImpl.java"
            todir="${build.java}/${path-to-ctx}/portlet">
            <filterset>
              <filter token="WEBMILL_RELEASE" value="${release-version}"/>
              <filter token="WEBMILL_BUILD" value="${build.number}"/>
            </filterset>
        </copy>
    </target>

    <target name="delete_existing_files">
        <property name="path-to-ctx" value="org/riverock/webmill/portal"/>
        <delete file="${build.dest}/${path-to-ctx}/PortalInstanceImpl.class"/>
    </target>

    <target name="prepare_local">
        <delete includeEmptyDirs="true" failonerror="false">
            <fileset dir="${build.java}">
                <include name="**"/>
            </fileset>
        </delete>
        <mkdir dir="${build.java}" />
    </target>

    <target name="compile" depends="set_build_number, prepare, prepare_local">

        <antcall target="replace_properties" inheritall="true" />
        <javac
            target="${java.class.target}"
            source="${java.class.source}"
            srcdir="${src.java.dir}"
            destdir="${build.dest}"
            includes="**/org/riverock/webmill/exception/*.java"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}"
            failonerror="true"
            memoryInitialSize="128m"
            memoryMaximumSize="256m"
            >
            <classpath>
                <path refid="classpath-base"/>
            </classpath>
        </javac>
        <javac
            target="${java.class.target}"
            source="${java.class.source}"
            srcdir="${src-core.java.dir}"
            destdir="${build.dest}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}"
            failonerror="true"
            memoryInitialSize="128m"
            memoryMaximumSize="256m"
            >
            <classpath>
                <path refid="classpath-base"/>
                <path location="${build.dest}"/>
            </classpath>
        </javac>

        <javac
            target="${java.class.target}"
            source="${java.class.source}"
            srcdir="${src-schema.java.dir}"
            destdir="${build.dest}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}"
            failonerror="true"
            memoryInitialSize="128m"
            memoryMaximumSize="256m"
            >
            <classpath>
                <path refid="classpath-base"/>
                <path location="${build.dest}"/>
            </classpath>
        </javac>
        <javac
            target="${java.class.target}"
            source="${java.class.source}"
            srcdir="${src.java.dir}"
            destdir="${build.dest}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}"
            failonerror="true"
            memoryInitialSize="128m"
            memoryMaximumSize="256m"
            >
            <classpath>
                <path refid="classpath-base"/>
                <path location="${build.dest}"/>
            </classpath>
        </javac>

        <antcall target="delete_existing_files"/>

        <javac
            target="${java.class.target}"
            source="${java.class.source}"
            srcdir="${build.java}"
            destdir="${build.dest}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}"
            failonerror="true"
            memoryInitialSize="128m"
            memoryMaximumSize="256m"
            >
            <classpath>
                <path refid="classpath-base"/>
                <path location="${build.dest}"/>
            </classpath>
        </javac>
    </target>

    <patternset id="war.classes">
        <include name="**"/>
    </patternset>

    <patternset id="war.lib">
        <include name="${riverock-sso.lib}"/>
        <include name="${riverock-sql-parser.lib}"/>
        <include name="${riverock-generic.lib}"/>
        <include name="${riverock-common.lib}"/>
        <include name="${riverock-cache.lib}"/>
        <include name="${riverock-webmill.lib}"/>

        <include name="${commons-logging.lib}"/>
        <include name="${commons-digester.lib}"/>
        <include name="${commons-collections.lib}"/>
        <include name="${commons-beanutils.lib}"/>
        <include name="${log4j.lib}"/>
        <include name="${castor.lib}"/>
    </patternset>

    <target name="war" depends="jar" >
        <property name="war-file-name" value="${build.dir}/${context.war.name}"/>
        <delete file="${war-file-name}"/>
        <war webxml="${web.dir}/WEB-INF/web.xml"
            warfile="${war-file-name}"
            update="false" duplicate="preserve">
            <fileset dir="${web.dir}">
                <exclude name="WEB-INF/classes/**/*.*"/>
                <exclude name="WEB-INF/lib/*.*"/>
                <exclude name="WEB-INF/web.xml"/>
                <exclude name="**/*.*-*"/>
            </fileset>
<!--
            <classes dir="${build.dest}">
                <patternset refid="war.classes"/>
            </classes>
-->
            <lib dir="${lib.dir}">
                <patternset refid="war.lib"/>
            </lib>
        </war>
    </target>

<!--
    <target name="build_mill_context" >
        <delete includeEmptyDirs="true" failonerror="false">
            <fileset dir="${build_context}">
                <include name="**"/>
            </fileset>
        </delete>
        <mkdir dir="${build_context}" />

        <copy file="${build.dir}/${mill.lib}" tofile="${build_mill_context_lib}/${main.lib}" filtering="off" overwrite="true"/>
        <copy todir="${build_mill_context_lib}">
            <fileset refid="web-inf-lib"/>
        </copy>

        <copy todir="${build_mill_context_images}">
            <fileset dir="${src.dir}/images"/>
        </copy>
        <copy todir="${build_mill_context_xsd}">
            <fileset dir="${src.dir}/xsd">
                <include name="**/*.xsd"/>
                <exclude name="test/**"/>
            </fileset>
        </copy>

        <copy todir="${build_mill_context}/WEB-INF/mill">
            <fileset dir="${webinf.jsp.dir}\mill">
                <exclude name="**/*.xsd"/>
                <exclude name="**/*.log"/>
                <exclude name="**/mill.xml"/>
                <exclude name="**/mill.log4j.properties"/>
                <include name="**/*.xml"/>
                <include name="log/**"/>
            </fileset>
        </copy>
        <copy file="${webinf.jsp.dir}/web.xml"
            tofile="${build_mill_context}/WEB-INF/web.xml"/>
    </target>
-->
</project>
