<?xml version="1.0"?>
<!--$Id$-->
<project name="Webtest extension processing" default="jar" basedir=".">

    <property name="Name" value="riverock-webtest-ext"/>
    <property name="release-version" value="1.0.0"/>
    <property name="build-release-name" value="riverock-webtest-ext-${release-version}"/>
    <property name="manifest-title-name" value="Riverock extension for webtest"/>
    <property name="manifest-vendor-name" value="Riverock"/>

    <property name="main.lib" value="${Name}-${release-version}.jar"/>

    <property name="java.target" value="1.5"/>
    <property name="java.class.target" value="1.5"/>
    <property name="java.class.source" value="1.5"/>

    <property name="local-lib.dir" value="lib"/>
    <property name="lib.dir" value="lib"/>

    <property name="xerces.lib" value="xercesImpl-2.6.2.jar"/>
    <property name="xml-api.lib" value="xmlParserAPIs-2.6.2.jar"/>
    <property name="xalan.lib" value="xalan-2.4.1.jar"/>
    <property name="log4j.lib" value="log4j-1.2.8.jar"/>
    <property name="junit.lib" value="junit-3.8.1.jar"/>
    <property name="servlet.lib" value="servlet-2.4.jar"/>
    <property name="oro.lib" value="jakarta-oro-2.0.8.jar"/>

    <property name="webtest.lib" value="webtest.jar"/>
    <property name="htmlunit.lib" value="htmlunit-1.6.jar"/>

    <!--# apache's common library-->
    <property name="commons-httpclient.lib" value="commons-httpclient-3.0-beta1.jar"/>
    <property name="commons-logging.lib" value="commons-logging-1.0.3.jar"/>
    <property name="commons-codec.lib" value="commons-codec-1.3.jar"/>
    <property name="commons-digister.lib" value="commons-digester-1.6.jar"/>
    <property name="commons-collections.lib" value="commons-collections-2.1.jar"/>
    <property name="commons-lang.lib" value="commons-lang-2.1.jar"/>

    <property name="src.dir" value="src"/>
    <property name="src.java.dir" value="${src.dir}/java"/>
    <property name="src.java-test.dir" value="${src.dir}/test"/>
    <property name="src.xml.dir" value="${src.dir}/xml"/>

    <property name="build.dir" value="build"/>
    <property name="build.dest" value="${build.dir}/classes"/>
    <property name="build.java" value="${build.dir}/java"/>
    <property name="build.tests" value="${build.dir}/tests"/>
    <property name="build.src.java" value="${src.java.dir}"/>

    <property name="debug" value="on"/>
    <property name="optimize" value="off"/>
    <property name="deprecation" value="on"/>

    <property name="manifest-file-name" value="manifest.mf"/>
    <property name="manifest" value="${src.java.dir}/${manifest-file-name}"/>


    <path id="classpath-base">
        <pathelement location="${lib.dir}/${webtest.lib}"/>
        <pathelement location="${lib.dir}/${htmlunit.lib}"/>
        <pathelement location="${lib.dir}/${log4j.lib}"/>
        <pathelement location="${lib.dir}/${oro.lib}"/>
    </path>

    <target name="prepare">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dest}"/>
        <mkdir dir="${build.tests}"/>
    </target>

    <target name="clean">
        <delete failonerror="false">
            <fileset dir="${build.dir}">
                <include name="**"/>
                <include name="*.jar"/>
                <include name="*.tar"/>
                <include name="*.gz"/>
            </fileset>
        </delete>
        <delete dir="${build.dir}/src/" failonerror="false"/>
        <delete dir="${build.dir}/classes/" failonerror="false"/>
        <delete dir="${build.dir}/bin/" failonerror="false"/>
        <delete dir="${build.dir}/tomcat/" failonerror="false"/>
        <delete dir="${build.dir}/ext/" failonerror="false"/>
        <delete dir="${build.dir}" failonerror="false"/>
    </target>

    <target name="compile" depends="clean, prepare">
        <javac
            target="${java.class.target}"
            source="${java.class.source}"
            srcdir="${src.java.dir}"
            destdir="${build.dest}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}"
            failonerror="true"
            memoryInitialSize="128m"
            memoryMaximumSize="256m"
            >
            <classpath>
                <path refid="classpath-base"/>
                <path location="${build.dest}"/>
            </classpath>
        </javac>
    </target>

    <target name="make_manifest_file">
        <echo message="Start make manifest file"/>
    <echo file="${build.dest}/${manifest-file-name}">Manifest-Version: 1.0
Specification-Title: ${manifest-title-name}
Specification-Vendor: ${manifest-vendor-name}
Specification-Version: ${release-version}
Implementation-Title: ${manifest-title-name}
Implementation-Vendor: ${manifest-vendor-name}
Implementation-Version: ${release-version}

Name: ${manifest-title-name}
Sealed: true
</echo>
        <echo message="Manifest file is created"/>
    </target>

    <target name="jar_without_copy" depends="compile">
        <antcall target="make_manifest_file"/>
        <jar jarfile="${build.dir}/${main.lib}"
            basedir="${build.dest}"
            includes="org/riverock/webtest**"
            excludes="**/*.txt,**/*.bat,**/*.sh,**/*.jav,**/*.java,${manifest-file-name}"
            manifest="${build.dest}/${manifest-file-name}"/>
    </target>

    <target name="jar" depends="jar_without_copy">
        <copy file="${build.dir}\${main.lib}" todir="lib" overwrite="true" />
    </target>
</project>
