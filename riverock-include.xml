<?xml version="1.0"?>
<!--
/*
 * Copyright (C) 2006, Riverock Software, All Rights Reserved.
 *
 * Riverock - The Open-source Java Development Community
 * http://www.riverock.org
 *
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
-->
<!--$Id$-->
<project name="riverock deploy file for build module" default="jar" basedir=".">

    <import file="riverock-globals-macro.xml"/>
    <import file="riverock-globals-prop.xml"/>
    <import file="riverock-globals-target.xml"/>

    <property name="main.lib" value="${Name}-${release-version}.jar"/>

    <target name="jar" depends="jar_without_copy">
        <copy file="${build.dir}\${main.lib}" todir="../riverock-lib/lib"/>
    </target>

    <target name="clean">
        <delete failonerror="false">
            <fileset dir="${build.dir}">
                <include name="**"/>
                <include name="*.jar"/>
                <include name="*.tar"/>
                <include name="*.gz"/>
            </fileset>
        </delete>
        <delete dir="${build.dir}/src/" failonerror="false"/>
        <delete dir="${build.dir}/classes/" failonerror="false"/>
        <delete dir="${build.dir}/bin/" failonerror="false"/>
        <delete dir="${build.dir}/tomcat/" failonerror="false"/>
        <delete dir="${build.dir}/ext/" failonerror="false"/>
        <delete dir="${build.dir}" failonerror="false"/>
    </target>

    <!-- =================================================================== -->
    <!-- Runs unit tests                                                     -->
    <!-- =================================================================== -->
    <target name="ut" depends="compile">
      <echo message="Running unit tests "/>

      <javac srcdir="${src.java-test.dir}"
             destdir="${build.tests}"
             debug="${debug}"
             deprecation="${deprecation}"
             optimize="${optimize}"
         classpath="${lib.dir}">
          <classpath>
              <path location="${build.dir}/classes"/>
              <path refid="classpath-base"/>
          </classpath>
       </javac>

       <junit printsummary="yes" haltonfailure="no" haltonerror="no" showoutput="no"
           dir="${webinf.jsp.dir}" fork="true" >

          <classpath>
              <path location="${build.tests}"/>
              <path location="${build.dir}/classes"/>
              <path refid="classpath-base"/>
          </classpath>

          <formatter type="plain" usefile="false"/>

          <batchtest fork="yes" haltonfailure="yes" haltonerror="yes">
            <fileset dir="${build.tests}">
                <include name="**/Test*.class"/>
                <exclude name="**/*$*.class"/>
            </fileset>
          </batchtest>
       </junit>
    </target>

    <target name="make_manifest_file">
        <echo message="Start make manifest file"/>
    <echo file="${build.dest}/${manifest-file-name}">Manifest-Version: 1.0
Specification-Title: ${manifest-title-name}
Specification-Vendor: ${manifest-vendor-name}
Specification-Version: ${release-version}
Implementation-Title: ${manifest-title-name}
Implementation-Vendor: ${manifest-vendor-name}
Implementation-Version: ${release-version}

Name: ${manifest-title-name}
Sealed: true
</echo>
        <echo message="Manifest file is created"/>
    </target>

    <target name="jar_without_copy" depends="compile">
        <antcall target="make_manifest_file"/>
        <jar jarfile="${build.dir}/${main.lib}"
            basedir="${build.dest}"
            includes="org/riverock/**"
            excludes="**/*.txt,**/*.bat,**/*.sh,**/*.jav,**/*.java,${manifest-file-name}"
            manifest="${build.dest}/${manifest-file-name}"/>
    </target>

    <!-- Prepares the build directory                                        -->
    <target name="prepare">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dest}"/>
        <mkdir dir="${build.tests}"/>
    </target>

    <target name="docs" depends="prepare">
        <echo message="Build javadoc"/>
        <!-- create directories -->
        <mkdir dir="${docs.dir}"/>
        <javadoc
            sourcepath="${build.src.java}"
            destdir="${docs.dir}"
            verbose="true"
            defaultexcludes="true"
            packagenames="mill/db/*,mill/tools/*, mill/startup/*"
            excludepackagenames="mill/price/*"
            >
            <classpath refid="classpath-base"/>
        </javadoc>
    </target>

    <target name="usage-main">
        <echo message=""/>
        <echo message="${Name} Build file"/>
        <echo message="   full_build_module --> full rebuild module"/>
        <echo message=""/>
    </target>

</project>
